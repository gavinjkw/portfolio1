/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { animate, animation, style } from '@angular/animations';
import { EaseIn, EaseOut } from '../easings';
/** @type {?} */
var swingBase = [
    style({
        opacity: "{{startOpacity}}",
        transform: "rotate{{direction}}({{startAngle}}deg)",
        transformOrigin: "{{xPos}} {{yPos}}"
    }),
    animate("{{duration}} {{delay}} {{easing}}", style({
        opacity: "{{endOpacity}}",
        transform: "rotate{{direction}}({{endAngle}}deg)",
        transformOrigin: "{{xPos}} {{yPos}}"
    }))
];
/** @type {?} */
var swingParams = {
    delay: '0s',
    direction: 'X',
    duration: '.5s',
    easing: EaseOut.back,
    endAngle: 0,
    endOpacity: 1,
    startAngle: -100,
    startOpacity: 0,
    xPos: 'top',
    yPos: 'center'
};
/** @type {?} */
var swingOutParams = tslib_1.__assign({}, swingParams, { duration: '.55s', easing: EaseIn.back, endAngle: 70, endOpacity: 0, startAngle: 0, startOpacity: 1 });
/** @type {?} */
var swingInTopFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams)
});
/** @type {?} */
var swingInRightFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', xPos: 'center', yPos: 'right' })
});
/** @type {?} */
var swingInBottomFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { startAngle: 100, xPos: 'bottom' })
});
/** @type {?} */
var swingInLeftFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', startAngle: 100, xPos: 'center', yPos: 'left' })
});
/** @type {?} */
var swingInTopBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { duration: '.6s', startAngle: 70 })
});
/** @type {?} */
var swingInRightBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', duration: '.6s', startAngle: 70, xPos: 'center', yPos: 'right' })
});
/** @type {?} */
var swingInBottomBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { duration: '.6s', startAngle: -70, xPos: 'bottom' })
});
/** @type {?} */
var swingInLeftBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingParams, { direction: 'Y', duration: '.6s', startAngle: -70, xPos: 'center', yPos: 'left' })
});
/** @type {?} */
var swingOutTopFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams)
});
/** @type {?} */
var swingOutRightFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', xPos: 'center', yPos: 'right' })
});
/** @type {?} */
var swingOutBottomFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { endAngle: -70, xPos: 'bottom' })
});
/** @type {?} */
var swingOutLefttFwd = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', endAngle: -70, xPos: 'center', yPos: 'left' })
});
/** @type {?} */
var swingOutTopBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { duration: '.45s', endAngle: -100 })
});
/** @type {?} */
var swingOutRightBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', duration: '.45s', endAngle: -100, xPos: 'center', yPos: 'right' })
});
/** @type {?} */
var swingOutBottomBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { duration: '.45s', endAngle: 100, xPos: 'bottom' })
});
/** @type {?} */
var swingOutLeftBck = animation(swingBase, {
    params: tslib_1.__assign({}, swingOutParams, { direction: 'Y', duration: '.45s', endAngle: 100, xPos: 'center', yPos: 'left' })
});
export { swingInTopFwd, swingInRightFwd, swingInLeftFwd, swingInBottomFwd, swingInTopBck, swingInRightBck, swingInBottomBck, swingInLeftBck, swingOutTopFwd, swingOutRightFwd, swingOutBottomFwd, swingOutLefttFwd, swingOutTopBck, swingOutRightBck, swingOutBottomBck, swingOutLeftBck };
//# sourceMappingURL=data:application/json;base64,