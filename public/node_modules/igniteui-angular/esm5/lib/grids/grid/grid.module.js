/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { IgxGroupAreaDropDirective, IgxGroupByRowTemplateDirective } from './grid.directives';
import { IgxGridComponent } from './grid.component';
import { IgxGridPagingPipe, IgxGridPostGroupingPipe, IgxGridPreGroupingPipe, IgxGridSortingPipe, IgxGridFilteringPipe } from './grid.pipes';
import { IgxGridGroupByRowComponent } from './groupby-row.component';
import { IgxGridRowComponent } from './grid-row.component';
import { IgxChipsModule } from '../../chips/chips.module';
import { IgxGridCommonModule } from '../grid-common.module';
import { DeprecateMethod } from '../../core/deprecateDecorators';
import { IgxGridSummaryPipe } from './grid.summary.pipe';
/**
 * @hidden
 */
var IgxGridModule = /** @class */ (function () {
    function IgxGridModule() {
    }
    /**
     * @return {?}
     */
    IgxGridModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: IgxGridModule
        };
    };
    IgxGridModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        IgxGridComponent,
                        IgxGridRowComponent,
                        IgxGridGroupByRowComponent,
                        IgxGroupByRowTemplateDirective,
                        IgxGroupAreaDropDirective,
                        IgxGridPreGroupingPipe,
                        IgxGridPostGroupingPipe,
                        IgxGridPagingPipe,
                        IgxGridSortingPipe,
                        IgxGridFilteringPipe,
                        IgxGridSummaryPipe
                    ],
                    exports: [
                        IgxGridComponent,
                        IgxGridGroupByRowComponent,
                        IgxGridRowComponent,
                        IgxGroupByRowTemplateDirective,
                        IgxGroupAreaDropDirective,
                        IgxGridCommonModule,
                        IgxGridPreGroupingPipe,
                        IgxGridPostGroupingPipe,
                        IgxGridPagingPipe,
                        IgxGridSortingPipe,
                        IgxGridFilteringPipe,
                        IgxGridSummaryPipe
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        IgxChipsModule,
                        IgxGridCommonModule
                    ]
                },] }
    ];
    tslib_1.__decorate([
        DeprecateMethod('IgxGridModule.forRoot method is deprecated. Use IgxGridModule instead.'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], IgxGridModule, "forRoot", null);
    return IgxGridModule;
}());
export { IgxGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2dyaWRzL2dyaWQvZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUNILHlCQUF5QixFQUN6Qiw4QkFBOEIsRUFDakMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNwRCxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUN2QixzQkFBc0IsRUFDdEIsa0JBQWtCLEVBQ2xCLG9CQUFvQixFQUN2QixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBS3pEO0lBQUE7SUEwQ0EsQ0FBQzs7OztJQUxlLHFCQUFPOzs7SUFBckI7UUFDRSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGFBQWE7U0FDMUIsQ0FBQztJQUNKLENBQUM7O2dCQXpDRixRQUFRLFNBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLGdCQUFnQjt3QkFDaEIsbUJBQW1CO3dCQUNuQiwwQkFBMEI7d0JBQzFCLDhCQUE4Qjt3QkFDOUIseUJBQXlCO3dCQUN6QixzQkFBc0I7d0JBQ3RCLHVCQUF1Qjt3QkFDdkIsaUJBQWlCO3dCQUNqQixrQkFBa0I7d0JBQ2xCLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3FCQUNuQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsZ0JBQWdCO3dCQUNoQiwwQkFBMEI7d0JBQzFCLG1CQUFtQjt3QkFDbkIsOEJBQThCO3dCQUM5Qix5QkFBeUI7d0JBQ3pCLG1CQUFtQjt3QkFDbkIsc0JBQXNCO3dCQUN0Qix1QkFBdUI7d0JBQ3ZCLGlCQUFpQjt3QkFDakIsa0JBQWtCO3dCQUNsQixvQkFBb0I7d0JBQ3BCLGtCQUFrQjtxQkFDbkI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxjQUFjO3dCQUNkLG1CQUFtQjtxQkFDcEI7aUJBQ0Y7O0lBR0M7UUFEQyxlQUFlLENBQUMsd0VBQXdFLENBQUM7Ozs7c0NBS3pGO0lBQ0gsb0JBQUM7Q0FBQSxBQTFDRCxJQTBDQztTQVBZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtcbiAgICBJZ3hHcm91cEFyZWFEcm9wRGlyZWN0aXZlLFxuICAgIElneEdyb3VwQnlSb3dUZW1wbGF0ZURpcmVjdGl2ZVxufSBmcm9tICcuL2dyaWQuZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRQb3N0R3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQcmVHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlXG59IGZyb20gJy4vZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXBieS1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRSb3dDb21wb25lbnQgfSBmcm9tICcuL2dyaWQtcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDaGlwc01vZHVsZSB9IGZyb20gJy4uLy4uL2NoaXBzL2NoaXBzLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vZ3JpZC1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IERlcHJlY2F0ZU1ldGhvZCB9IGZyb20gJy4uLy4uL2NvcmUvZGVwcmVjYXRlRGVjb3JhdG9ycyc7XG5pbXBvcnQgeyBJZ3hHcmlkU3VtbWFyeVBpcGUgfSBmcm9tICcuL2dyaWQuc3VtbWFyeS5waXBlJztcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIElneEdyaWRDb21wb25lbnQsXG4gICAgSWd4R3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcmlkR3JvdXBCeVJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcm91cEJ5Um93VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBBcmVhRHJvcERpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkUHJlR3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQb3N0R3JvdXBpbmdQaXBlLFxuICAgIElneEdyaWRQYWdpbmdQaXBlLFxuICAgIElneEdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hHcmlkRmlsdGVyaW5nUGlwZSxcbiAgICBJZ3hHcmlkU3VtbWFyeVBpcGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIElneEdyaWRDb21wb25lbnQsXG4gICAgSWd4R3JpZEdyb3VwQnlSb3dDb21wb25lbnQsXG4gICAgSWd4R3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hHcm91cEJ5Um93VGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JvdXBBcmVhRHJvcERpcmVjdGl2ZSxcbiAgICBJZ3hHcmlkQ29tbW9uTW9kdWxlLFxuICAgIElneEdyaWRQcmVHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBvc3RHcm91cGluZ1BpcGUsXG4gICAgSWd4R3JpZFBhZ2luZ1BpcGUsXG4gICAgSWd4R3JpZFNvcnRpbmdQaXBlLFxuICAgIElneEdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneEdyaWRTdW1tYXJ5UGlwZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIElneENoaXBzTW9kdWxlLFxuICAgIElneEdyaWRDb21tb25Nb2R1bGVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkTW9kdWxlIHtcbiAgQERlcHJlY2F0ZU1ldGhvZCgnSWd4R3JpZE1vZHVsZS5mb3JSb290IG1ldGhvZCBpcyBkZXByZWNhdGVkLiBVc2UgSWd4R3JpZE1vZHVsZSBpbnN0ZWFkLicpXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZ01vZHVsZTogSWd4R3JpZE1vZHVsZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==