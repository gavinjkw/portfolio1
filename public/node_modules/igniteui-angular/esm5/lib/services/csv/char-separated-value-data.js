/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ExportUtilities } from '../exporter-common/export-utilities';
/**
 * @hidden
 */
var /**
 * @hidden
 */
CharSeparatedValueData = /** @class */ (function () {
    function CharSeparatedValueData(_data, valueDelimiter, _isTreeGridData) {
        if (_isTreeGridData === void 0) { _isTreeGridData = false; }
        this._data = _data;
        this._isTreeGridData = _isTreeGridData;
        this._headerRecord = '';
        this._dataRecords = '';
        this._eor = '\r\n';
        this._escapeCharacters = ['\r', '\n', '\r\n'];
        this._delimiterLength = 1;
        this._isSpecialData = false;
        this.setDelimiter(valueDelimiter);
    }
    /**
     * @return {?}
     */
    CharSeparatedValueData.prototype.prepareData = /**
     * @return {?}
     */
    function () {
        if (!this._data || this._data.length === 0) {
            return '';
        }
        this._data = this._data.map(function (item) { return item.rowData; });
        /** @type {?} */
        var keys = ExportUtilities.getKeysFromData(this._data);
        if (keys.length === 0) {
            return '';
        }
        this._isSpecialData = ExportUtilities.isSpecialData(this._data);
        this._escapeCharacters.push(this._delimiter);
        this._headerRecord = this.processHeaderRecord(keys, this._escapeCharacters);
        this._dataRecords = this.processDataRecords(this._data, keys, this._escapeCharacters);
        return this._headerRecord + this._dataRecords;
    };
    /**
     * @private
     * @param {?} value
     * @param {?} escapeChars
     * @return {?}
     */
    CharSeparatedValueData.prototype.processField = /**
     * @private
     * @param {?} value
     * @param {?} escapeChars
     * @return {?}
     */
    function (value, escapeChars) {
        /** @type {?} */
        var safeValue = ExportUtilities.hasValue(value) ? String(value) : '';
        if (escapeChars.some(function (v) { return safeValue.includes(v); })) {
            safeValue = "\"" + safeValue + "\"";
        }
        return safeValue + this._delimiter;
    };
    /**
     * @private
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    CharSeparatedValueData.prototype.processHeaderRecord = /**
     * @private
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    function (keys, escapeChars) {
        var e_1, _a;
        /** @type {?} */
        var recordData = '';
        try {
            for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
                var keyName = keys_1_1.value;
                recordData += this.processField(keyName, this._escapeCharacters);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return recordData.slice(0, -this._delimiterLength) + this._eor;
    };
    /**
     * @private
     * @param {?} record
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    CharSeparatedValueData.prototype.processRecord = /**
     * @private
     * @param {?} record
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    function (record, keys, escapeChars) {
        var e_2, _a;
        /** @type {?} */
        var recordData = '';
        try {
            for (var keys_2 = tslib_1.__values(keys), keys_2_1 = keys_2.next(); !keys_2_1.done; keys_2_1 = keys_2.next()) {
                var keyName = keys_2_1.value;
                /** @type {?} */
                var value = (record[keyName] !== undefined) ? record[keyName] : this._isSpecialData ? record : '';
                recordData += this.processField(value, this._escapeCharacters);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (keys_2_1 && !keys_2_1.done && (_a = keys_2.return)) _a.call(keys_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return recordData.slice(0, -this._delimiterLength) + this._eor;
    };
    /**
     * @private
     * @param {?} currentData
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    CharSeparatedValueData.prototype.processDataRecords = /**
     * @private
     * @param {?} currentData
     * @param {?} keys
     * @param {?} escapeChars
     * @return {?}
     */
    function (currentData, keys, escapeChars) {
        var e_3, _a;
        /** @type {?} */
        var dataRecords = '';
        try {
            for (var currentData_1 = tslib_1.__values(currentData), currentData_1_1 = currentData_1.next(); !currentData_1_1.done; currentData_1_1 = currentData_1.next()) {
                var row = currentData_1_1.value;
                dataRecords += this.processRecord(row, keys, escapeChars);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (currentData_1_1 && !currentData_1_1.done && (_a = currentData_1.return)) _a.call(currentData_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return dataRecords;
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    CharSeparatedValueData.prototype.setDelimiter = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this._delimiter = value;
        this._delimiterLength = value.length;
    };
    return CharSeparatedValueData;
}());
/**
 * @hidden
 */
export { CharSeparatedValueData };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._headerRecord;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._dataRecords;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._eor;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._delimiter;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._escapeCharacters;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._delimiterLength;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._isSpecialData;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._data;
    /**
     * @type {?}
     * @private
     */
    CharSeparatedValueData.prototype._isTreeGridData;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhci1zZXBhcmF0ZWQtdmFsdWUtZGF0YS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvY3N2L2NoYXItc2VwYXJhdGVkLXZhbHVlLWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7QUFLdEU7Ozs7SUFTSSxnQ0FBb0IsS0FBWSxFQUFFLGNBQXNCLEVBQVUsZUFBdUI7UUFBdkIsZ0NBQUEsRUFBQSx1QkFBdUI7UUFBckUsVUFBSyxHQUFMLEtBQUssQ0FBTztRQUFrQyxvQkFBZSxHQUFmLGVBQWUsQ0FBUTtRQVJqRixrQkFBYSxHQUFHLEVBQUUsQ0FBQztRQUNuQixpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQixTQUFJLEdBQUcsTUFBTSxDQUFDO1FBRWQsc0JBQWlCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3pDLHFCQUFnQixHQUFHLENBQUMsQ0FBQztRQUNyQixtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUczQixJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFTSw0Q0FBVzs7O0lBQWxCO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3hDLE9BQU8sRUFBRSxDQUFDO1NBQ2I7UUFFRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsSUFBSSxDQUFDLE9BQU8sRUFBWixDQUFZLENBQUMsQ0FBQzs7WUFFOUMsSUFBSSxHQUFHLGVBQWUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUV4RCxJQUFJLElBQUksQ0FB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QUFJLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQzthQUM3RDs7Ozs7Ozs7O1FBRUQsT0FBTyxXQUFXLENBQUM7SUFDdkIsQ0FBQzs7Ozs7O0lBRU8sNkNBQVk7Ozs7O0lBQXBCLFVBQXFCLEtBQUs7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDekMsQ0FBQztJQUNMLDZCQUFDO0FBQUQsQ0FBQyxBQTVFRCxJQTRFQzs7Ozs7Ozs7OztJQTNFRywrQ0FBMkI7Ozs7O0lBQzNCLDhDQUEwQjs7Ozs7SUFDMUIsc0NBQXNCOzs7OztJQUN0Qiw0Q0FBbUI7Ozs7O0lBQ25CLG1EQUFpRDs7Ozs7SUFDakQsa0RBQTZCOzs7OztJQUM3QixnREFBK0I7Ozs7O0lBRW5CLHVDQUFvQjs7Ozs7SUFBMEIsaURBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwb3J0VXRpbGl0aWVzIH0gZnJvbSAnLi4vZXhwb3J0ZXItY29tbW9uL2V4cG9ydC11dGlsaXRpZXMnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIENoYXJTZXBhcmF0ZWRWYWx1ZURhdGEge1xuICAgIHByaXZhdGUgX2hlYWRlclJlY29yZCA9ICcnO1xuICAgIHByaXZhdGUgX2RhdGFSZWNvcmRzID0gJyc7XG4gICAgcHJpdmF0ZSBfZW9yID0gJ1xcclxcbic7XG4gICAgcHJpdmF0ZSBfZGVsaW1pdGVyO1xuICAgIHByaXZhdGUgX2VzY2FwZUNoYXJhY3RlcnMgPSBbJ1xccicsICdcXG4nLCAnXFxyXFxuJ107XG4gICAgcHJpdmF0ZSBfZGVsaW1pdGVyTGVuZ3RoID0gMTtcbiAgICBwcml2YXRlIF9pc1NwZWNpYWxEYXRhID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9kYXRhOiBhbnlbXSwgdmFsdWVEZWxpbWl0ZXI6IHN0cmluZywgcHJpdmF0ZSBfaXNUcmVlR3JpZERhdGEgPSBmYWxzZSkge1xuICAgICAgICB0aGlzLnNldERlbGltaXRlcih2YWx1ZURlbGltaXRlcik7XG4gICAgfVxuXG4gICAgcHVibGljIHByZXBhcmVEYXRhKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2RhdGEgfHwgdGhpcy5fZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2RhdGEgPSB0aGlzLl9kYXRhLm1hcCgoaXRlbSkgPT4gaXRlbS5yb3dEYXRhKTtcblxuICAgICAgICBjb25zdCBrZXlzID0gRXhwb3J0VXRpbGl0aWVzLmdldEtleXNGcm9tRGF0YSh0aGlzLl9kYXRhKTtcblxuICAgICAgICBpZiAoa2V5cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2lzU3BlY2lhbERhdGEgPSBFeHBvcnRVdGlsaXRpZXMuaXNTcGVjaWFsRGF0YSh0aGlzLl9kYXRhKTtcbiAgICAgICAgdGhpcy5fZXNjYXBlQ2hhcmFjdGVycy5wdXNoKHRoaXMuX2RlbGltaXRlcik7XG5cbiAgICAgICAgdGhpcy5faGVhZGVyUmVjb3JkID0gdGhpcy5wcm9jZXNzSGVhZGVyUmVjb3JkKGtleXMsIHRoaXMuX2VzY2FwZUNoYXJhY3RlcnMpO1xuICAgICAgICB0aGlzLl9kYXRhUmVjb3JkcyA9IHRoaXMucHJvY2Vzc0RhdGFSZWNvcmRzKHRoaXMuX2RhdGEsIGtleXMsIHRoaXMuX2VzY2FwZUNoYXJhY3RlcnMpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLl9oZWFkZXJSZWNvcmQgKyB0aGlzLl9kYXRhUmVjb3JkcztcbiAgICB9XG5cbiAgICBwcml2YXRlIHByb2Nlc3NGaWVsZCh2YWx1ZSwgZXNjYXBlQ2hhcnMpOiBzdHJpbmcge1xuICAgICAgICBsZXQgc2FmZVZhbHVlID0gRXhwb3J0VXRpbGl0aWVzLmhhc1ZhbHVlKHZhbHVlKSA/IFN0cmluZyh2YWx1ZSkgOiAnJztcbiAgICAgICAgaWYgKGVzY2FwZUNoYXJzLnNvbWUoKHYpID0+IHNhZmVWYWx1ZS5pbmNsdWRlcyh2KSkpIHtcbiAgICAgICAgICAgIHNhZmVWYWx1ZSA9IGBcIiR7c2FmZVZhbHVlfVwiYDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2FmZVZhbHVlICsgdGhpcy5fZGVsaW1pdGVyO1xuICAgIH1cblxuICAgIHByaXZhdGUgcHJvY2Vzc0hlYWRlclJlY29yZChrZXlzLCBlc2NhcGVDaGFycyk6IHN0cmluZyB7XG4gICAgICAgIGxldCByZWNvcmREYXRhID0gJyc7XG4gICAgICAgIGZvciAoY29uc3Qga2V5TmFtZSBvZiBrZXlzKSB7XG4gICAgICAgICAgICByZWNvcmREYXRhICs9IHRoaXMucHJvY2Vzc0ZpZWxkKGtleU5hbWUsIHRoaXMuX2VzY2FwZUNoYXJhY3RlcnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlY29yZERhdGEuc2xpY2UoMCwgLXRoaXMuX2RlbGltaXRlckxlbmd0aCkgKyB0aGlzLl9lb3I7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwcm9jZXNzUmVjb3JkKHJlY29yZCwga2V5cywgZXNjYXBlQ2hhcnMpOiBzdHJpbmcge1xuICAgICAgICBsZXQgcmVjb3JkRGF0YSA9ICcnO1xuICAgICAgICBmb3IgKGNvbnN0IGtleU5hbWUgb2Yga2V5cykge1xuXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IChyZWNvcmRba2V5TmFtZV0gIT09IHVuZGVmaW5lZCkgPyByZWNvcmRba2V5TmFtZV0gOiB0aGlzLl9pc1NwZWNpYWxEYXRhID8gcmVjb3JkIDogJyc7XG4gICAgICAgICAgICByZWNvcmREYXRhICs9IHRoaXMucHJvY2Vzc0ZpZWxkKHZhbHVlLCB0aGlzLl9lc2NhcGVDaGFyYWN0ZXJzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZWNvcmREYXRhLnNsaWNlKDAsIC10aGlzLl9kZWxpbWl0ZXJMZW5ndGgpICsgdGhpcy5fZW9yO1xuICAgIH1cblxuICAgIHByaXZhdGUgcHJvY2Vzc0RhdGFSZWNvcmRzKGN1cnJlbnREYXRhLCBrZXlzLCBlc2NhcGVDaGFycykge1xuICAgICAgICBsZXQgZGF0YVJlY29yZHMgPSAnJztcbiAgICAgICAgZm9yIChjb25zdCByb3cgb2YgY3VycmVudERhdGEpIHtcbiAgICAgICAgICAgIGRhdGFSZWNvcmRzICs9IHRoaXMucHJvY2Vzc1JlY29yZChyb3csIGtleXMsIGVzY2FwZUNoYXJzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBkYXRhUmVjb3JkcztcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldERlbGltaXRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9kZWxpbWl0ZXIgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fZGVsaW1pdGVyTGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgIH1cbn1cbiJdfQ==