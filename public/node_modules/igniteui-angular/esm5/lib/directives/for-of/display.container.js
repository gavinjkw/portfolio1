/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, HostBinding, ViewChild, ViewContainerRef } from '@angular/core';
var DisplayContainerComponent = /** @class */ (function () {
    function DisplayContainerComponent(cdr, _viewContainer) {
        this.cdr = cdr;
        this._viewContainer = _viewContainer;
        this.cssClass = 'igx-display-container';
        this.notVirtual = true;
    }
    DisplayContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-display-container',
                    template: "\n        <ng-template\n            #display_container\n            igxScrollInertia\n            [IgxScrollInertiaScrollContainer]=\"scrollContainer\"\n            [IgxScrollInertiaDirection]=\"scrollDirection\">\n        </ng-template>\n    "
                }] }
    ];
    /** @nocollapse */
    DisplayContainerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ViewContainerRef }
    ]; };
    DisplayContainerComponent.propDecorators = {
        _vcr: [{ type: ViewChild, args: ['display_container', { read: ViewContainerRef },] }],
        cssClass: [{ type: HostBinding, args: ['class',] }],
        notVirtual: [{ type: HostBinding, args: ['class.igx-display-container--inactive',] }]
    };
    return DisplayContainerComponent;
}());
export { DisplayContainerComponent };
if (false) {
    /** @type {?} */
    DisplayContainerComponent.prototype._vcr;
    /** @type {?} */
    DisplayContainerComponent.prototype.scrollDirection;
    /** @type {?} */
    DisplayContainerComponent.prototype.cssClass;
    /** @type {?} */
    DisplayContainerComponent.prototype.notVirtual;
    /** @type {?} */
    DisplayContainerComponent.prototype.scrollContainer;
    /** @type {?} */
    DisplayContainerComponent.prototype.cdr;
    /** @type {?} */
    DisplayContainerComponent.prototype._viewContainer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGxheS5jb250YWluZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZm9yLW9mL2Rpc3BsYXkuY29udGFpbmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsU0FBUyxFQUNULGdCQUFnQixFQUNuQixNQUFNLGVBQWUsQ0FBQztBQUV2QjtJQXlCSSxtQ0FBbUIsR0FBc0IsRUFBUyxjQUFnQztRQUEvRCxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUFTLG1CQUFjLEdBQWQsY0FBYyxDQUFrQjtRQVAzRSxhQUFRLEdBQUcsdUJBQXVCLENBQUM7UUFHbkMsZUFBVSxHQUFHLElBQUksQ0FBQztJQUk2RCxDQUFDOztnQkF6QjFGLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUscVBBT1Q7aUJBQ0o7Ozs7Z0JBakJHLGlCQUFpQjtnQkFJakIsZ0JBQWdCOzs7dUJBZWYsU0FBUyxTQUFDLG1CQUFtQixFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFOzJCQUt6RCxXQUFXLFNBQUMsT0FBTzs2QkFHbkIsV0FBVyxTQUFDLHVDQUF1Qzs7SUFNeEQsZ0NBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQWZZLHlCQUF5Qjs7O0lBQ2xDLHlDQUNZOztJQUVaLG9EQUErQjs7SUFFL0IsNkNBQzBDOztJQUUxQywrQ0FDeUI7O0lBRXpCLG9EQUF1Qjs7SUFFWCx3Q0FBNkI7O0lBQUUsbURBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgVmlld0NoaWxkLFxuICAgIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWRpc3BsYXktY29udGFpbmVyJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICAgICNkaXNwbGF5X2NvbnRhaW5lclxuICAgICAgICAgICAgaWd4U2Nyb2xsSW5lcnRpYVxuICAgICAgICAgICAgW0lneFNjcm9sbEluZXJ0aWFTY3JvbGxDb250YWluZXJdPVwic2Nyb2xsQ29udGFpbmVyXCJcbiAgICAgICAgICAgIFtJZ3hTY3JvbGxJbmVydGlhRGlyZWN0aW9uXT1cInNjcm9sbERpcmVjdGlvblwiPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgIGBcbn0pXG5leHBvcnQgY2xhc3MgRGlzcGxheUNvbnRhaW5lckNvbXBvbmVudCB7XG4gICAgQFZpZXdDaGlsZCgnZGlzcGxheV9jb250YWluZXInLCB7IHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSlcbiAgICBwdWJsaWMgX3ZjcjtcblxuICAgIHB1YmxpYyBzY3JvbGxEaXJlY3Rpb246IHN0cmluZztcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICAgIHB1YmxpYyBjc3NDbGFzcyA9ICdpZ3gtZGlzcGxheS1jb250YWluZXInO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZGlzcGxheS1jb250YWluZXItLWluYWN0aXZlJylcbiAgICBwdWJsaWMgbm90VmlydHVhbCA9IHRydWU7XG5cbiAgICBwdWJsaWMgc2Nyb2xsQ29udGFpbmVyO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHB1YmxpYyBfdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZikgeyB9XG59XG4iXX0=