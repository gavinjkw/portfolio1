/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input, HostBinding, Output, EventEmitter } from '@angular/core';
import { Navigate } from './drop-down.common';
import { DropDownActionKey } from './drop-down.common';
/** @type {?} */
var NEXT_ID = 0;
/**
 * An abstract class, defining a drop-down component, with:
 * Properties for display styles and classes
 * A collection items of type `IgxDropDownItemBase`
 * Properties and methods for navigating (highlighting/focusing) items from the collection
 * Properties and methods for selecting items from the collection
 * @abstract
 */
var IgxDropDownBase = /** @class */ (function () {
    function IgxDropDownBase(elementRef, cdr) {
        this.elementRef = elementRef;
        this.cdr = cdr;
        this._focusedItem = null;
        this._id = "igx-drop-down-" + NEXT_ID++;
        /**
         * Emitted when item selection is changing, before the selection completes
         *
         * ```html
         * <igx-drop-down (onSelection)='handleSelection()'></igx-drop-down>
         * ```
         */
        this.onSelection = new EventEmitter();
        /**
         * Gets/Sets the drop down's container max height.
         *
         * ```typescript
         * // get
         * let maxHeight = this.dropdown.maxHeight;
         * ```
         * ```html
         * <!--set-->
         * <igx-drop-down [maxHeight]='200px'></igx-drop-down>
         * ```
         */
        this.maxHeight = null;
        /**
         * @hidden \@internal
         */
        this.cssClass = true;
    }
    Object.defineProperty(IgxDropDownBase.prototype, "scrollContainer", {
        /**
         * Get dropdown's html element of it scroll container
         */
        get: /**
         * Get dropdown's html element of it scroll container
         * @protected
         * @return {?}
         */
        function () {
            return this.element;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownBase.prototype, "items", {
        /**
         * Get all non-header items
         *
         * ```typescript
         * let myDropDownItems = this.dropdown.items;
         * ```
         */
        get: /**
         * Get all non-header items
         *
         * ```typescript
         * let myDropDownItems = this.dropdown.items;
         * ```
         * @return {?}
         */
        function () {
            var e_1, _a;
            /** @type {?} */
            var items = [];
            if (this.children !== undefined) {
                try {
                    for (var _b = tslib_1.__values(this.children.toArray()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var child = _c.value;
                        if (!child.isHeader) {
                            items.push(child);
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            return items;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownBase.prototype, "headers", {
        /**
         * Get all header items
         *
         * ```typescript
         * let myDropDownHeaderItems = this.dropdown.headers;
         * ```
         */
        get: /**
         * Get all header items
         *
         * ```typescript
         * let myDropDownHeaderItems = this.dropdown.headers;
         * ```
         * @return {?}
         */
        function () {
            var e_2, _a;
            /** @type {?} */
            var headers = [];
            if (this.children !== undefined) {
                try {
                    for (var _b = tslib_1.__values(this.children.toArray()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var child = _c.value;
                        if (child.isHeader) {
                            headers.push(child);
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            return headers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDropDownBase.prototype, "element", {
        /**
         * Get dropdown html element
         *
         * ```typescript
         * let myDropDownElement = this.dropdown.element;
         * ```
         */
        get: /**
         * Get dropdown html element
         *
         * ```typescript
         * let myDropDownElement = this.dropdown.element;
         * ```
         * @return {?}
         */
        function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    /** Keydown Handler */
    /**
     * Keydown Handler
     * @param {?} key
     * @param {?=} event
     * @return {?}
     */
    IgxDropDownBase.prototype.onItemActionKey = /**
     * Keydown Handler
     * @param {?} key
     * @param {?=} event
     * @return {?}
     */
    function (key, event) {
        switch (key) {
            case DropDownActionKey.ENTER:
            case DropDownActionKey.SPACE:
                this.selectItem(this.focusedItem, event);
                break;
            case DropDownActionKey.ESCAPE:
        }
    };
    /**
     * Emits onSelection with the target item & event
     * @hidden @internal
     * @param newSelection the item selected
     * @param event the event that triggered the call
     */
    /**
     * Emits onSelection with the target item & event
     * @hidden \@internal
     * @param {?=} newSelection the item selected
     * @param {?=} event the event that triggered the call
     * @return {?}
     */
    IgxDropDownBase.prototype.selectItem = /**
     * Emits onSelection with the target item & event
     * @hidden \@internal
     * @param {?=} newSelection the item selected
     * @param {?=} event the event that triggered the call
     * @return {?}
     */
    function (newSelection, event) {
        this.onSelection.emit({
            newSelection: newSelection,
            oldSelection: null,
            cancel: false
        });
    };
    Object.defineProperty(IgxDropDownBase.prototype, "focusedItem", {
        /**
         * @hidden @internal
         */
        get: /**
         * @hidden \@internal
         * @return {?}
         */
        function () {
            return this._focusedItem;
        },
        /**
         * @hidden @internal
         */
        set: /**
         * @hidden \@internal
         * @param {?} item
         * @return {?}
         */
        function (item) {
            this._focusedItem = item;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @protected
     * @param {?} direction
     * @param {?=} currentIndex
     * @return {?}
     */
    IgxDropDownBase.prototype.navigate = /**
     * @protected
     * @param {?} direction
     * @param {?=} currentIndex
     * @return {?}
     */
    function (direction, currentIndex) {
        /** @type {?} */
        var index = -1;
        if (this._focusedItem) {
            index = currentIndex ? currentIndex : this.focusedItem.itemIndex;
        }
        /** @type {?} */
        var newIndex = this.getNearestSiblingFocusableItemIndex(index, direction);
        this.navigateItem(newIndex);
    };
    /**
     * @protected
     * @param {?} startIndex
     * @param {?} direction
     * @return {?}
     */
    IgxDropDownBase.prototype.getNearestSiblingFocusableItemIndex = /**
     * @protected
     * @param {?} startIndex
     * @param {?} direction
     * @return {?}
     */
    function (startIndex, direction) {
        /** @type {?} */
        var index = startIndex;
        /** @type {?} */
        var items = this.items;
        while (items[index + direction] && items[index + direction].disabled) {
            index += direction;
        }
        index += direction;
        if (index >= 0 && index < items.length) {
            return index;
        }
        else {
            return -1;
        }
    };
    /**
     * Navigates to the item on the specified index
     * @param newIndex number - the index of the item in the `items` collection
     */
    /**
     * Navigates to the item on the specified index
     * @param {?} newIndex number - the index of the item in the `items` collection
     * @return {?}
     */
    IgxDropDownBase.prototype.navigateItem = /**
     * Navigates to the item on the specified index
     * @param {?} newIndex number - the index of the item in the `items` collection
     * @return {?}
     */
    function (newIndex) {
        if (newIndex !== -1) {
            /** @type {?} */
            var oldItem = this._focusedItem;
            /** @type {?} */
            var newItem = this.items[newIndex];
            if (oldItem) {
                oldItem.focused = false;
            }
            this.focusedItem = newItem;
            this.scrollToHiddenItem(newItem);
            this.focusedItem.focused = true;
        }
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxDropDownBase.prototype.navigateFirst = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.navigate(Navigate.Down, -1);
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxDropDownBase.prototype.navigateLast = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.navigate(Navigate.Up, this.items.length);
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxDropDownBase.prototype.navigateNext = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.navigate(Navigate.Down);
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxDropDownBase.prototype.navigatePrev = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.navigate(Navigate.Up);
    };
    /**
     * @protected
     * @param {?} newItem
     * @return {?}
     */
    IgxDropDownBase.prototype.scrollToHiddenItem = /**
     * @protected
     * @param {?} newItem
     * @return {?}
     */
    function (newItem) {
        /** @type {?} */
        var elementRect = newItem.element.nativeElement.getBoundingClientRect();
        /** @type {?} */
        var parentRect = this.scrollContainer.getBoundingClientRect();
        if (parentRect.top > elementRect.top) {
            this.scrollContainer.scrollTop -= (parentRect.top - elementRect.top);
        }
        if (parentRect.bottom < elementRect.bottom) {
            this.scrollContainer.scrollTop += (elementRect.bottom - parentRect.bottom);
        }
    };
    IgxDropDownBase.propDecorators = {
        onSelection: [{ type: Output }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        id: [{ type: Input }],
        maxHeight: [{ type: Input }, { type: HostBinding, args: ['style.maxHeight',] }],
        cssClass: [{ type: HostBinding, args: ['class.igx-drop-down',] }]
    };
    return IgxDropDownBase;
}());
export { IgxDropDownBase };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype._width;
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype._height;
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype._focusedItem;
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype._id;
    /**
     * @hidden
     * \@internal
     * @type {?}
     */
    IgxDropDownBase.prototype.children;
    /**
     * Emitted when item selection is changing, before the selection completes
     *
     * ```html
     * <igx-drop-down (onSelection)='handleSelection()'></igx-drop-down>
     * ```
     * @type {?}
     */
    IgxDropDownBase.prototype.onSelection;
    /**
     *  Gets/Sets the width of the drop down
     *
     * ```typescript
     * // get
     * let myDropDownCurrentWidth = this.dropdown.width;
     * ```
     * ```html
     * <!--set-->
     * <igx-drop-down [width]='160px'></igx-drop-down>
     * ```
     * @type {?}
     */
    IgxDropDownBase.prototype.width;
    /**
     * Gets/Sets the height of the drop down
     *
     * ```typescript
     * // get
     * let myDropDownCurrentHeight = this.dropdown.height;
     * ```
     * ```html
     * <!--set-->
     * <igx-drop-down [height]='400px'></igx-drop-down>
     * ```
     * @type {?}
     */
    IgxDropDownBase.prototype.height;
    /**
     * Gets/Sets the drop down's id
     *
     * ```typescript
     * // get
     * let myDropDownCurrentId = this.dropdown.id;
     * ```
     * ```html
     * <!--set-->
     * <igx-drop-down [id]='newDropDownId'></igx-drop-down>
     * ```
     * @type {?}
     */
    IgxDropDownBase.prototype.id;
    /**
     * Gets/Sets the drop down's container max height.
     *
     * ```typescript
     * // get
     * let maxHeight = this.dropdown.maxHeight;
     * ```
     * ```html
     * <!--set-->
     * <igx-drop-down [maxHeight]='200px'></igx-drop-down>
     * ```
     * @type {?}
     */
    IgxDropDownBase.prototype.maxHeight;
    /**
     * @hidden \@internal
     * @type {?}
     */
    IgxDropDownBase.prototype.cssClass;
    /**
     * Gets if the dropdown is collapsed
     * @type {?}
     */
    IgxDropDownBase.prototype.collapsed;
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype.elementRef;
    /**
     * @type {?}
     * @protected
     */
    IgxDropDownBase.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,